package com.my.research.and.dev;

import com.google.common.collect.HashMultiset;
import com.google.common.collect.ImmutableSet;
import com.google.common.collect.Multiset;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class Reels2 {

    private static final String WILD = "Wild";
    private static final String DRAGON = "Dragon";
    private static final String TOAD = "Toad";
    private static final String RED_FISH = "Red Fish";
    private static final String ORANGE = "Orange";
    private static final String EIGHT = "Eight";
    private static final String A = "A";
    private static final String K = "K";
    private static final String Q = "Q";
    private static final String J = "J";
    private static final String T = "T";
    private static final String N = "N";
    private static final String BONUS = "Bonus";

    private static final Map<String, Integer> SYM_INDX;

    static {
        SYM_INDX = new HashMap<>();
        SYM_INDX.put(WILD, 0);
        SYM_INDX.put(DRAGON, 1);
        SYM_INDX.put(TOAD, 2);
        SYM_INDX.put(RED_FISH, 3);
        SYM_INDX.put(ORANGE, 4);
        SYM_INDX.put(EIGHT, 5);
        SYM_INDX.put(A, 6);
        SYM_INDX.put(K, 7);
        SYM_INDX.put(Q, 8);
        SYM_INDX.put(J, 9);
        SYM_INDX.put(T, 10);
        SYM_INDX.put(N, 11);
        SYM_INDX.put(BONUS, 12);
    }

    private static final String[][] MAIN_REELS_1 = {
            {N, RED_FISH, DRAGON, Q, K, EIGHT, BONUS, TOAD, RED_FISH, A, ORANGE, ORANGE, ORANGE, J, N, EIGHT, DRAGON, TOAD, Q, RED_FISH, RED_FISH, RED_FISH, K, ORANGE, EIGHT, T, DRAGON, DRAGON, DRAGON, ORANGE, A, N, TOAD, RED_FISH, J, Q, EIGHT, DRAGON, BONUS, T, TOAD, TOAD, TOAD, K, A, RED_FISH, EIGHT, ORANGE, Q, DRAGON, DRAGON, DRAGON, J, Q, RED_FISH, TOAD, EIGHT, EIGHT, EIGHT, T, K, ORANGE, DRAGON, TOAD, N, ORANGE, ORANGE, ORANGE, A, J, RED_FISH, EIGHT, DRAGON, DRAGON, DRAGON, T, BONUS, TOAD, EIGHT, K, N, RED_FISH, RED_FISH, RED_FISH, ORANGE, DRAGON, A, TOAD, TOAD, TOAD, EIGHT, T, RED_FISH, ORANGE, Q, EIGHT, EIGHT, EIGHT, DRAGON, N, TOAD, EIGHT, K, A, RED_FISH, ORANGE, ORANGE, ORANGE, EIGHT, T, DRAGON, J, EIGHT, EIGHT, EIGHT, TOAD, RED_FISH, N, BONUS, EIGHT, TOAD, DRAGON, A, EIGHT, TOAD, T, RED_FISH, RED_FISH, RED_FISH, J, ORANGE, DRAGON, N, EIGHT, Q, TOAD, TOAD, TOAD, DRAGON, K, RED_FISH, ORANGE, T, DRAGON, EIGHT, TOAD, J, ORANGE, ORANGE, ORANGE},
            {K, DRAGON, ORANGE, RED_FISH, Q, N, EIGHT, EIGHT, EIGHT, J, TOAD, DRAGON, ORANGE, ORANGE, ORANGE, T, K, RED_FISH, EIGHT, TOAD, TOAD, TOAD, ORANGE, WILD, N, Q, DRAGON, DRAGON, DRAGON, J, RED_FISH, EIGHT, T, TOAD, TOAD, TOAD, A, K, DRAGON, ORANGE, RED_FISH, N, EIGHT, EIGHT, EIGHT, J, TOAD, DRAGON, ORANGE, ORANGE, ORANGE, T, EIGHT, RED_FISH, A, WILD, K, N, TOAD, ORANGE, DRAGON, J, RED_FISH, RED_FISH, RED_FISH, Q, T, TOAD, EIGHT, DRAGON, DRAGON, DRAGON, ORANGE, RED_FISH, A, N, TOAD, WILD, EIGHT, RED_FISH, RED_FISH, RED_FISH, T, Q, ORANGE, ORANGE, ORANGE, J, RED_FISH, EIGHT, DRAGON, DRAGON, DRAGON, A, N, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, J, DRAGON, K, RED_FISH, WILD, T, TOAD, Q, ORANGE, RED_FISH, A, EIGHT, K, DRAGON, TOAD, ORANGE, RED_FISH, EIGHT, T, DRAGON, Q, ORANGE, EIGHT, WILD, N, ORANGE, EIGHT, A, RED_FISH, RED_FISH, RED_FISH, J, TOAD, DRAGON, T, K, TOAD, ORANGE, RED_FISH, RED_FISH, RED_FISH, Q, N, DRAGON, EIGHT, WILD, J, A, ORANGE, RED_FISH, EIGHT, T, TOAD, TOAD, TOAD},
            {K, EIGHT, EIGHT, EIGHT, TOAD, Q, DRAGON, DRAGON, DRAGON, RED_FISH, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, A, K, DRAGON, RED_FISH, TOAD, TOAD, TOAD, Q, ORANGE, EIGHT, WILD, J, N, DRAGON, RED_FISH, A, TOAD, TOAD, TOAD, T, K, ORANGE, EIGHT, DRAGON, Q, RED_FISH, RED_FISH, RED_FISH, ORANGE, TOAD, J, N, EIGHT, EIGHT, EIGHT, A, DRAGON, RED_FISH, K, TOAD, TOAD, TOAD, T, ORANGE, EIGHT, Q, DRAGON, DRAGON, DRAGON, RED_FISH, J, N, WILD, TOAD, A, ORANGE, ORANGE, ORANGE, K, EIGHT, DRAGON, Q, RED_FISH, RED_FISH, RED_FISH, T, J, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, A, DRAGON, RED_FISH, TOAD, N, K, WILD, ORANGE, Q, DRAGON, DRAGON, DRAGON, EIGHT, ORANGE, T, J, WILD, TOAD, RED_FISH, DRAGON, ORANGE, ORANGE, ORANGE, EIGHT, DRAGON, N, RED_FISH, Q, TOAD, WILD, T, ORANGE, J, DRAGON, RED_FISH, A, TOAD, K, Q, EIGHT, ORANGE, DRAGON, N, RED_FISH, RED_FISH, RED_FISH, T, TOAD, EIGHT, WILD, A, J, DRAGON, RED_FISH, ORANGE, K, Q, TOAD, RED_FISH, N, ORANGE, ORANGE, ORANGE, T, DRAGON, RED_FISH, A, TOAD},
            {J, RED_FISH, RED_FISH, RED_FISH, EIGHT, ORANGE, A, Q, DRAGON, DRAGON, DRAGON, ORANGE, RED_FISH, EIGHT, EIGHT, EIGHT, J, ORANGE, RED_FISH, DRAGON, DRAGON, DRAGON, Q, TOAD, TOAD, TOAD, WILD, A, K, ORANGE, EIGHT, DRAGON, T, J, TOAD, RED_FISH, RED_FISH, RED_FISH, N, ORANGE, EIGHT, Q, DRAGON, DRAGON, DRAGON, RED_FISH, TOAD, A, K, EIGHT, EIGHT, EIGHT, T, ORANGE, DRAGON, J, TOAD, N, WILD, RED_FISH, Q, ORANGE, ORANGE, ORANGE, A, K, EIGHT, DRAGON, TOAD, J, RED_FISH, RED_FISH, RED_FISH, T, ORANGE, EIGHT, DRAGON, Q, N, TOAD, WILD, K, A, ORANGE, DRAGON, RED_FISH, TOAD, TOAD, TOAD, ORANGE, DRAGON, T, EIGHT, RED_FISH, Q, ORANGE, ORANGE, ORANGE, N, K, EIGHT, DRAGON, TOAD, J, WILD, N, ORANGE, RED_FISH, DRAGON, T, Q, TOAD, EIGHT, ORANGE, ORANGE, ORANGE, TOAD, K, RED_FISH, DRAGON, J, TOAD, TOAD, TOAD, EIGHT, A, Q, WILD, ORANGE, DRAGON, T, K, TOAD, RED_FISH, N, EIGHT, EIGHT, EIGHT, J, ORANGE, RED_FISH, A, DRAGON, Q, TOAD, TOAD, TOAD, T, K, DRAGON, EIGHT, WILD, TOAD, N, ORANGE},
            {T, EIGHT, BONUS, ORANGE, DRAGON, DRAGON, DRAGON, J, RED_FISH, TOAD, A, ORANGE, ORANGE, ORANGE, Q, DRAGON, EIGHT, RED_FISH, RED_FISH, RED_FISH, T, K, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, N, DRAGON, RED_FISH, A, TOAD, TOAD, TOAD, Q, J, ORANGE, EIGHT, DRAGON, DRAGON, DRAGON, T, K, TOAD, RED_FISH, BONUS, N, A, DRAGON, ORANGE, EIGHT, EIGHT, EIGHT, RED_FISH, TOAD, Q, J, ORANGE, ORANGE, ORANGE, DRAGON, EIGHT, K, TOAD, TOAD, TOAD, DRAGON, EIGHT, N, RED_FISH, ORANGE, A, Q, DRAGON, RED_FISH, ORANGE, TOAD, EIGHT, T, BONUS, ORANGE, K, DRAGON, N, RED_FISH, TOAD, A, EIGHT, EIGHT, EIGHT, ORANGE, DRAGON, J, RED_FISH, RED_FISH, RED_FISH, EIGHT, TOAD, T, K, ORANGE, ORANGE, ORANGE, EIGHT, N, DRAGON, RED_FISH, TOAD, EIGHT, Q, DRAGON, ORANGE, EIGHT, J, T, RED_FISH, TOAD, K, N, EIGHT, BONUS, DRAGON, ORANGE, A, Q, TOAD, RED_FISH, J, EIGHT, T, DRAGON, ORANGE, TOAD, K, N, RED_FISH, EIGHT, A, Q, DRAGON, ORANGE, RED_FISH, J, TOAD}
    };

    private static final String[][] MAIN_REELS_2 = {
            {N, RED_FISH, DRAGON, Q, K, EIGHT, BONUS, TOAD, RED_FISH, A, ORANGE, ORANGE, ORANGE, J, N, EIGHT, DRAGON, TOAD, Q, RED_FISH, RED_FISH, RED_FISH, K, ORANGE, EIGHT, T, DRAGON, DRAGON, DRAGON, ORANGE, A, N, TOAD, RED_FISH, J, Q, EIGHT, DRAGON, BONUS, T, TOAD, TOAD, TOAD, K, A, RED_FISH, EIGHT, ORANGE, Q, DRAGON, DRAGON, DRAGON, J, Q, RED_FISH, TOAD, EIGHT, EIGHT, EIGHT, T, K, ORANGE, DRAGON, TOAD, N, ORANGE, ORANGE, ORANGE, A, J, RED_FISH, EIGHT, DRAGON, DRAGON, DRAGON, T, BONUS, TOAD, EIGHT, K, N, RED_FISH, RED_FISH, RED_FISH, ORANGE, DRAGON, A, TOAD, TOAD, TOAD, EIGHT, T, RED_FISH, ORANGE, Q, EIGHT, EIGHT, EIGHT, DRAGON, N, TOAD, EIGHT, K, A, RED_FISH, ORANGE, ORANGE, ORANGE, EIGHT, T, DRAGON, J, EIGHT, EIGHT, EIGHT, TOAD, RED_FISH, N, BONUS, EIGHT, TOAD, DRAGON, A, EIGHT, TOAD, T, RED_FISH, RED_FISH, RED_FISH, J, ORANGE, DRAGON, N, EIGHT, Q, TOAD, TOAD, TOAD, DRAGON, K, RED_FISH, ORANGE, T, DRAGON, EIGHT, TOAD, J, ORANGE, ORANGE, ORANGE},
            {K, DRAGON, ORANGE, RED_FISH, Q, N, EIGHT, EIGHT, EIGHT, J, TOAD, DRAGON, ORANGE, ORANGE, ORANGE, T, K, RED_FISH, EIGHT, TOAD, TOAD, TOAD, ORANGE, N, Q, DRAGON, DRAGON, DRAGON, J, RED_FISH, EIGHT, T, TOAD, TOAD, TOAD, A, K, DRAGON, ORANGE, RED_FISH, N, EIGHT, EIGHT, EIGHT, J, TOAD, DRAGON, ORANGE, ORANGE, ORANGE, T, EIGHT, RED_FISH, A, K, N, TOAD, ORANGE, DRAGON, J, RED_FISH, RED_FISH, RED_FISH, Q, T, TOAD, EIGHT, DRAGON, DRAGON, DRAGON, ORANGE, RED_FISH, A, N, TOAD, WILD, EIGHT, RED_FISH, RED_FISH, RED_FISH, T, Q, ORANGE, ORANGE, ORANGE, J, RED_FISH, EIGHT, DRAGON, DRAGON, DRAGON, A, N, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, J, DRAGON, K, RED_FISH, WILD, T, TOAD, Q, ORANGE, RED_FISH, A, EIGHT, K, DRAGON, TOAD, ORANGE, RED_FISH, EIGHT, T, DRAGON, Q, ORANGE, EIGHT, WILD, N, ORANGE, EIGHT, A, RED_FISH, RED_FISH, RED_FISH, J, TOAD, DRAGON, T, K, TOAD, ORANGE, RED_FISH, RED_FISH, RED_FISH, Q, N, DRAGON, EIGHT, J, A, ORANGE, RED_FISH, EIGHT, T, TOAD, TOAD, TOAD},
            {K, EIGHT, EIGHT, EIGHT, TOAD, Q, DRAGON, DRAGON, DRAGON, RED_FISH, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, A, K, DRAGON, RED_FISH, TOAD, TOAD, TOAD, Q, ORANGE, EIGHT, WILD, J, N, DRAGON, RED_FISH, A, TOAD, TOAD, TOAD, T, K, ORANGE, EIGHT, DRAGON, Q, RED_FISH, RED_FISH, RED_FISH, ORANGE, TOAD, J, N, EIGHT, EIGHT, EIGHT, A, DRAGON, RED_FISH, K, TOAD, TOAD, TOAD, T, ORANGE, EIGHT, Q, DRAGON, DRAGON, DRAGON, RED_FISH, J, N, TOAD, A, ORANGE, ORANGE, ORANGE, K, EIGHT, DRAGON, Q, RED_FISH, RED_FISH, RED_FISH, T, J, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, A, DRAGON, RED_FISH, TOAD, N, K, ORANGE, Q, DRAGON, DRAGON, DRAGON, EIGHT, ORANGE, T, J, WILD, TOAD, RED_FISH, DRAGON, ORANGE, ORANGE, ORANGE, EIGHT, DRAGON, N, RED_FISH, Q, TOAD, WILD, T, ORANGE, J, DRAGON, RED_FISH, A, TOAD, K, Q, EIGHT, ORANGE, DRAGON, N, RED_FISH, RED_FISH, RED_FISH, T, TOAD, EIGHT, A, J, DRAGON, RED_FISH, ORANGE, K, Q, TOAD, RED_FISH, N, ORANGE, ORANGE, ORANGE, T, DRAGON, RED_FISH, A, TOAD},
            {J, RED_FISH, RED_FISH, RED_FISH, EIGHT, ORANGE, A, Q, DRAGON, DRAGON, DRAGON, ORANGE, RED_FISH, EIGHT, EIGHT, EIGHT, J, ORANGE, RED_FISH, DRAGON, DRAGON, DRAGON, Q, TOAD, TOAD, TOAD, WILD, A, K, ORANGE, EIGHT, DRAGON, T, J, TOAD, RED_FISH, RED_FISH, RED_FISH, N, ORANGE, EIGHT, Q, DRAGON, DRAGON, DRAGON, RED_FISH, TOAD, A, K, EIGHT, EIGHT, EIGHT, T, ORANGE, DRAGON, J, TOAD, N, RED_FISH, Q, ORANGE, ORANGE, ORANGE, A, K, EIGHT, DRAGON, TOAD, J, RED_FISH, RED_FISH, RED_FISH, T, ORANGE, EIGHT, DRAGON, Q, N, TOAD, WILD, K, A, ORANGE, DRAGON, RED_FISH, TOAD, TOAD, TOAD, ORANGE, DRAGON, T, EIGHT, RED_FISH, Q, ORANGE, ORANGE, ORANGE, N, K, EIGHT, DRAGON, TOAD, J, WILD, N, ORANGE, RED_FISH, DRAGON, T, Q, TOAD, EIGHT, ORANGE, ORANGE, ORANGE, TOAD, K, RED_FISH, DRAGON, J, TOAD, TOAD, TOAD, EIGHT, A, Q, ORANGE, DRAGON, T, K, TOAD, RED_FISH, N, EIGHT, EIGHT, EIGHT, J, ORANGE, RED_FISH, A, DRAGON, Q, TOAD, TOAD, TOAD, T, K, DRAGON, EIGHT, TOAD, N, ORANGE},
            {T, EIGHT, BONUS, ORANGE, DRAGON, DRAGON, DRAGON, J, RED_FISH, TOAD, A, ORANGE, ORANGE, ORANGE, Q, DRAGON, EIGHT, RED_FISH, RED_FISH, RED_FISH, T, K, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, N, DRAGON, RED_FISH, A, TOAD, TOAD, TOAD, Q, J, ORANGE, EIGHT, DRAGON, DRAGON, DRAGON, T, K, TOAD, RED_FISH, BONUS, N, A, DRAGON, ORANGE, EIGHT, EIGHT, EIGHT, RED_FISH, TOAD, Q, J, ORANGE, ORANGE, ORANGE, DRAGON, EIGHT, K, TOAD, TOAD, TOAD, DRAGON, EIGHT, N, RED_FISH, ORANGE, A, Q, DRAGON, RED_FISH, ORANGE, TOAD, EIGHT, T, BONUS, ORANGE, K, DRAGON, N, RED_FISH, TOAD, A, EIGHT, EIGHT, EIGHT, ORANGE, DRAGON, J, RED_FISH, RED_FISH, RED_FISH, EIGHT, TOAD, T, K, ORANGE, ORANGE, ORANGE, EIGHT, N, DRAGON, RED_FISH, TOAD, EIGHT, Q, DRAGON, ORANGE, EIGHT, J, T, RED_FISH, TOAD, K, N, EIGHT, BONUS, DRAGON, ORANGE, A, Q, TOAD, RED_FISH, J, EIGHT, T, DRAGON, ORANGE, TOAD, K, N, RED_FISH, EIGHT, A, Q, DRAGON, ORANGE, RED_FISH, J, TOAD}
    };

    private static final String[][][] MAIN_REELS = {
            {},
            MAIN_REELS_1,
            MAIN_REELS_2
    };

    private static final String[][] FREE_REELS_1 = {
            {N, RED_FISH, DRAGON, Q, K, EIGHT, BONUS, TOAD, RED_FISH, A, ORANGE, ORANGE, ORANGE, J, N, EIGHT, DRAGON, TOAD, Q, RED_FISH, RED_FISH, RED_FISH, K, ORANGE, EIGHT, T, DRAGON, DRAGON, DRAGON, ORANGE, A, N, TOAD, RED_FISH, J, Q, EIGHT, DRAGON, BONUS, T, TOAD, TOAD, TOAD, K, A, RED_FISH, EIGHT, ORANGE, Q, DRAGON, DRAGON, DRAGON, J, Q, RED_FISH, TOAD, EIGHT, EIGHT, EIGHT, T, K, ORANGE, DRAGON, TOAD, N, ORANGE, ORANGE, ORANGE, A, J, RED_FISH, EIGHT, DRAGON, DRAGON, DRAGON, T, BONUS, TOAD, EIGHT, K, N, RED_FISH, RED_FISH, RED_FISH, ORANGE, DRAGON, A, TOAD, TOAD, TOAD, EIGHT, T, RED_FISH, ORANGE, Q, EIGHT, EIGHT, EIGHT, DRAGON, N, TOAD, EIGHT, K, A, RED_FISH, ORANGE, ORANGE, ORANGE, EIGHT, T, DRAGON, J, EIGHT, EIGHT, EIGHT, TOAD, RED_FISH, N, BONUS, EIGHT, TOAD, DRAGON, A, EIGHT, TOAD, T, RED_FISH, RED_FISH, RED_FISH, J, ORANGE, DRAGON, N, EIGHT, Q, TOAD, TOAD, TOAD, DRAGON, K, RED_FISH, ORANGE, T, DRAGON, EIGHT, TOAD, J, ORANGE, ORANGE, ORANGE},
            {K, DRAGON, ORANGE, RED_FISH, Q, N, EIGHT, EIGHT, EIGHT, J, TOAD, DRAGON, ORANGE, ORANGE, ORANGE, T, K, RED_FISH, EIGHT, TOAD, TOAD, TOAD, ORANGE, N, Q, DRAGON, DRAGON, DRAGON, J, RED_FISH, EIGHT, T, TOAD, TOAD, TOAD, A, K, DRAGON, ORANGE, RED_FISH, N, EIGHT, EIGHT, EIGHT, J, TOAD, DRAGON, ORANGE, ORANGE, ORANGE, T, EIGHT, RED_FISH, A, K, N, TOAD, ORANGE, DRAGON, J, RED_FISH, RED_FISH, RED_FISH, Q, T, TOAD, EIGHT, DRAGON, DRAGON, DRAGON, ORANGE, RED_FISH, A, N, TOAD, EIGHT, RED_FISH, RED_FISH, RED_FISH, T, Q, ORANGE, ORANGE, ORANGE, J, RED_FISH, EIGHT, DRAGON, DRAGON, DRAGON, A, N, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, J, DRAGON, K, RED_FISH, WILD, T, TOAD, Q, ORANGE, RED_FISH, A, EIGHT, K, DRAGON, TOAD, ORANGE, RED_FISH, EIGHT, T, DRAGON, Q, ORANGE, EIGHT, WILD, N, ORANGE, EIGHT, A, RED_FISH, RED_FISH, RED_FISH, J, TOAD, DRAGON, T, K, TOAD, ORANGE, RED_FISH, RED_FISH, RED_FISH, Q, N, DRAGON, EIGHT, J, A, ORANGE, RED_FISH, EIGHT, T, TOAD, TOAD, TOAD},
            {K, EIGHT, EIGHT, EIGHT, TOAD, Q, DRAGON, DRAGON, DRAGON, RED_FISH, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, A, K, DRAGON, RED_FISH, TOAD, TOAD, TOAD, Q, ORANGE, EIGHT, WILD, J, N, DRAGON, RED_FISH, A, TOAD, TOAD, TOAD, T, K, ORANGE, EIGHT, DRAGON, Q, RED_FISH, RED_FISH, RED_FISH, ORANGE, TOAD, J, N, EIGHT, EIGHT, EIGHT, A, DRAGON, RED_FISH, K, TOAD, TOAD, TOAD, T, ORANGE, EIGHT, Q, DRAGON, DRAGON, DRAGON, RED_FISH, J, N, TOAD, A, ORANGE, ORANGE, ORANGE, K, EIGHT, DRAGON, Q, RED_FISH, RED_FISH, RED_FISH, T, J, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, A, DRAGON, RED_FISH, TOAD, N, K, ORANGE, Q, DRAGON, DRAGON, DRAGON, EIGHT, ORANGE, T, J, TOAD, RED_FISH, DRAGON, ORANGE, ORANGE, ORANGE, EIGHT, DRAGON, N, RED_FISH, Q, TOAD, WILD, T, ORANGE, J, DRAGON, RED_FISH, A, TOAD, K, Q, EIGHT, ORANGE, DRAGON, N, RED_FISH, RED_FISH, RED_FISH, T, TOAD, EIGHT, A, J, DRAGON, RED_FISH, ORANGE, K, Q, TOAD, RED_FISH, N, ORANGE, ORANGE, ORANGE, T, DRAGON, RED_FISH, A, TOAD},
            {J, RED_FISH, RED_FISH, RED_FISH, EIGHT, ORANGE, A, Q, DRAGON, DRAGON, DRAGON, ORANGE, RED_FISH, EIGHT, EIGHT, EIGHT, J, ORANGE, RED_FISH, DRAGON, DRAGON, DRAGON, Q, TOAD, TOAD, TOAD, WILD, A, K, ORANGE, EIGHT, DRAGON, T, J, TOAD, RED_FISH, RED_FISH, RED_FISH, N, ORANGE, EIGHT, Q, DRAGON, DRAGON, DRAGON, RED_FISH, TOAD, A, K, EIGHT, EIGHT, EIGHT, T, ORANGE, DRAGON, J, TOAD, N, RED_FISH, Q, ORANGE, ORANGE, ORANGE, A, K, EIGHT, DRAGON, TOAD, J, RED_FISH, RED_FISH, RED_FISH, T, ORANGE, EIGHT, DRAGON, Q, N, TOAD, K, A, ORANGE, DRAGON, RED_FISH, TOAD, TOAD, TOAD, ORANGE, DRAGON, T, EIGHT, RED_FISH, Q, ORANGE, ORANGE, ORANGE, N, K, EIGHT, DRAGON, TOAD, J, WILD, N, ORANGE, RED_FISH, DRAGON, T, Q, TOAD, EIGHT, ORANGE, ORANGE, ORANGE, TOAD, K, RED_FISH, DRAGON, J, TOAD, TOAD, TOAD, EIGHT, A, Q, ORANGE, DRAGON, T, K, TOAD, RED_FISH, N, EIGHT, EIGHT, EIGHT, J, ORANGE, RED_FISH, A, DRAGON, Q, TOAD, TOAD, TOAD, T, K, DRAGON, EIGHT, TOAD, N, ORANGE},
            {T, EIGHT, BONUS, ORANGE, DRAGON, DRAGON, DRAGON, J, RED_FISH, TOAD, A, ORANGE, ORANGE, ORANGE, Q, DRAGON, EIGHT, RED_FISH, RED_FISH, RED_FISH, T, K, BONUS, ORANGE, EIGHT, EIGHT, EIGHT, N, DRAGON, RED_FISH, A, TOAD, TOAD, TOAD, Q, J, ORANGE, EIGHT, DRAGON, DRAGON, DRAGON, T, K, TOAD, RED_FISH, BONUS, N, A, DRAGON, ORANGE, EIGHT, EIGHT, EIGHT, RED_FISH, TOAD, Q, J, ORANGE, ORANGE, ORANGE, DRAGON, EIGHT, K, TOAD, TOAD, TOAD, DRAGON, EIGHT, N, BONUS, ORANGE, A, Q, DRAGON, RED_FISH, ORANGE, TOAD, EIGHT, T, BONUS, ORANGE, K, DRAGON, N, RED_FISH, TOAD, A, EIGHT, EIGHT, EIGHT, ORANGE, DRAGON, J, RED_FISH, RED_FISH, RED_FISH, EIGHT, TOAD, T, K, ORANGE, ORANGE, ORANGE, EIGHT, N, DRAGON, RED_FISH, TOAD, EIGHT, Q, DRAGON, ORANGE, EIGHT, J, T, RED_FISH, TOAD, K, N, EIGHT, BONUS, DRAGON, ORANGE, A, Q, TOAD, RED_FISH, J, EIGHT, T, DRAGON, ORANGE, TOAD, K, N, RED_FISH, EIGHT, A, Q, DRAGON, ORANGE, RED_FISH, J, TOAD}
    };

    private static final String[][] FREE_REELS_2 = {
            {N, RED_FISH, DRAGON, Q, K, EIGHT, BONUS, TOAD, RED_FISH, A, ORANGE, ORANGE, ORANGE, J, N, EIGHT, DRAGON, TOAD, Q, RED_FISH, RED_FISH, RED_FISH, K, ORANGE, EIGHT, T, DRAGON, DRAGON, DRAGON, ORANGE, A, N, TOAD, RED_FISH, J, Q, EIGHT, DRAGON, BONUS, T, TOAD, TOAD, TOAD, K, A, RED_FISH, EIGHT, ORANGE, Q, DRAGON, DRAGON, DRAGON, J, Q, RED_FISH, TOAD, EIGHT, EIGHT, EIGHT, T, K, ORANGE, DRAGON, TOAD, N, ORANGE, ORANGE, ORANGE, A, J, RED_FISH, EIGHT, DRAGON, DRAGON, DRAGON, T, BONUS, TOAD, EIGHT, K, N, RED_FISH, RED_FISH, RED_FISH, ORANGE, DRAGON, A, TOAD, TOAD, TOAD, EIGHT, T, RED_FISH, ORANGE, Q, EIGHT, EIGHT, EIGHT, DRAGON, N, TOAD, EIGHT, K, A, RED_FISH, ORANGE, ORANGE, ORANGE, EIGHT, T, DRAGON, J, EIGHT, EIGHT, EIGHT, TOAD, RED_FISH, N, BONUS, EIGHT, TOAD, DRAGON, A, EIGHT, TOAD, T, RED_FISH, RED_FISH, RED_FISH, J, ORANGE, DRAGON, N, EIGHT, Q, TOAD, TOAD, TOAD, DRAGON, K, RED_FISH, ORANGE, T, DRAGON, EIGHT, TOAD, J, ORANGE, ORANGE, ORANGE},
            {K, DRAGON, ORANGE, RED_FISH, Q, N, EIGHT, EIGHT, EIGHT, J, TOAD, DRAGON, ORANGE, ORANGE, ORANGE, T, K, RED_FISH, EIGHT, TOAD, TOAD, TOAD, ORANGE, WILD, N, Q, DRAGON, DRAGON, DRAGON, J, RED_FISH, EIGHT, T, TOAD, TOAD, TOAD, A, K, DRAGON, ORANGE, RED_FISH, N, EIGHT, EIGHT, EIGHT, J, TOAD, DRAGON, ORANGE, ORANGE, ORANGE, T, EIGHT, RED_FISH, A, WILD, K, N, TOAD, ORANGE, DRAGON, J, RED_FISH, RED_FISH, RED_FISH, Q, T, TOAD, EIGHT, DRAGON, DRAGON, DRAGON, ORANGE, RED_FISH, A, N, TOAD, WILD, EIGHT, RED_FISH, RED_FISH, RED_FISH, T, Q, ORANGE, ORANGE, ORANGE, J, RED_FISH, EIGHT, DRAGON, DRAGON, DRAGON, A, N, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, J, DRAGON, K, RED_FISH, WILD, T, TOAD, Q, ORANGE, RED_FISH, A, EIGHT, K, DRAGON, TOAD, ORANGE, RED_FISH, EIGHT, T, DRAGON, Q, ORANGE, EIGHT, WILD, N, ORANGE, EIGHT, A, RED_FISH, RED_FISH, RED_FISH, J, TOAD, DRAGON, T, K, TOAD, ORANGE, RED_FISH, RED_FISH, RED_FISH, Q, N, DRAGON, EIGHT, WILD, J, A, ORANGE, RED_FISH, EIGHT, T, TOAD, TOAD, TOAD},
            {K, EIGHT, EIGHT, EIGHT, TOAD, Q, DRAGON, DRAGON, DRAGON, RED_FISH, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, A, K, DRAGON, RED_FISH, TOAD, TOAD, TOAD, Q, ORANGE, EIGHT, WILD, J, N, DRAGON, RED_FISH, A, TOAD, TOAD, TOAD, T, K, ORANGE, EIGHT, DRAGON, Q, RED_FISH, RED_FISH, RED_FISH, ORANGE, TOAD, J, N, EIGHT, EIGHT, EIGHT, A, DRAGON, RED_FISH, K, TOAD, TOAD, TOAD, T, ORANGE, EIGHT, Q, DRAGON, DRAGON, DRAGON, RED_FISH, J, N, WILD, TOAD, A, ORANGE, ORANGE, ORANGE, K, EIGHT, DRAGON, Q, RED_FISH, RED_FISH, RED_FISH, T, J, TOAD, ORANGE, EIGHT, EIGHT, EIGHT, A, DRAGON, RED_FISH, TOAD, N, K, WILD, ORANGE, Q, DRAGON, DRAGON, DRAGON, EIGHT, ORANGE, T, J, WILD, TOAD, RED_FISH, DRAGON, ORANGE, ORANGE, ORANGE, EIGHT, DRAGON, N, RED_FISH, Q, TOAD, WILD, T, ORANGE, J, DRAGON, RED_FISH, A, TOAD, K, Q, EIGHT, ORANGE, DRAGON, N, RED_FISH, RED_FISH, RED_FISH, T, TOAD, EIGHT, WILD, A, J, DRAGON, RED_FISH, ORANGE, K, Q, TOAD, RED_FISH, N, ORANGE, ORANGE, ORANGE, T, DRAGON, RED_FISH, A, TOAD},
            {J, RED_FISH, RED_FISH, RED_FISH, EIGHT, ORANGE, A, Q, DRAGON, DRAGON, DRAGON, ORANGE, RED_FISH, EIGHT, EIGHT, EIGHT, J, ORANGE, RED_FISH, DRAGON, DRAGON, DRAGON, Q, TOAD, TOAD, TOAD, WILD, A, K, ORANGE, EIGHT, DRAGON, T, J, TOAD, RED_FISH, RED_FISH, RED_FISH, N, ORANGE, EIGHT, Q, DRAGON, DRAGON, DRAGON, RED_FISH, TOAD, A, K, EIGHT, EIGHT, EIGHT, T, ORANGE, DRAGON, J, TOAD, N, WILD, RED_FISH, Q, ORANGE, ORANGE, ORANGE, A, K, EIGHT, DRAGON, TOAD, J, RED_FISH, RED_FISH, RED_FISH, T, ORANGE, EIGHT, DRAGON, Q, N, TOAD, WILD, K, A, ORANGE, DRAGON, RED_FISH, TOAD, TOAD, TOAD, ORANGE, DRAGON, T, EIGHT, RED_FISH, Q, ORANGE, ORANGE, ORANGE, N, K, EIGHT, DRAGON, TOAD, J, WILD, N, ORANGE, RED_FISH, DRAGON, T, Q, TOAD, EIGHT, ORANGE, ORANGE, ORANGE, TOAD, K, RED_FISH, DRAGON, J, TOAD, TOAD, TOAD, EIGHT, A, Q, WILD, ORANGE, DRAGON, T, K, TOAD, RED_FISH, N, EIGHT, EIGHT, EIGHT, J, ORANGE, RED_FISH, A, DRAGON, Q, TOAD, TOAD, TOAD, T, K, DRAGON, EIGHT, WILD, TOAD, N, ORANGE},
            {T, EIGHT, BONUS, ORANGE, DRAGON, DRAGON, DRAGON, J, RED_FISH, TOAD, A, ORANGE, ORANGE, ORANGE, Q, DRAGON, EIGHT, RED_FISH, RED_FISH, RED_FISH, T, K, BONUS, ORANGE, EIGHT, EIGHT, EIGHT, N, DRAGON, RED_FISH, A, TOAD, TOAD, TOAD, Q, J, ORANGE, EIGHT, DRAGON, DRAGON, DRAGON, T, K, TOAD, RED_FISH, BONUS, N, A, DRAGON, ORANGE, EIGHT, EIGHT, EIGHT, RED_FISH, TOAD, Q, J, ORANGE, ORANGE, ORANGE, DRAGON, EIGHT, K, TOAD, TOAD, TOAD, DRAGON, EIGHT, N, BONUS, ORANGE, A, Q, DRAGON, RED_FISH, ORANGE, TOAD, EIGHT, T, BONUS, ORANGE, K, DRAGON, N, RED_FISH, TOAD, A, EIGHT, EIGHT, EIGHT, ORANGE, DRAGON, J, RED_FISH, RED_FISH, RED_FISH, EIGHT, TOAD, T, K, ORANGE, ORANGE, ORANGE, EIGHT, N, DRAGON, RED_FISH, TOAD, EIGHT, Q, DRAGON, ORANGE, EIGHT, J, T, RED_FISH, TOAD, K, N, EIGHT, BONUS, DRAGON, ORANGE, A, Q, TOAD, RED_FISH, J, EIGHT, T, DRAGON, ORANGE, TOAD, K, N, RED_FISH, EIGHT, A, Q, DRAGON, ORANGE, RED_FISH, J, TOAD}
    };

    private static final String[][][] FREE_REELS = {
            {},
            FREE_REELS_1,
            FREE_REELS_2
    };

    public static void main(String[] args) {
        final Map<Integer, Multiset<String>> countSymByReel = new HashMap<>();
        final String[][] reels = FREE_REELS_2;
        for (int reel = 0; reel < reels.length; reel++) {
            final Multiset<String> countSymb = HashMultiset.create();
            Collections.addAll(countSymb, reels[reel]);
            countSymByReel.put(reel, countSymb);
        }
        for (int reel = 0; reel < reels.length; reel++) {
            final int reelIndx = reel + 1;
            System.out.println("\n--- REEL " + reelIndx + " ---");
            int total = 0;
            final Multiset<String> countSym = countSymByReel.get(reel);
            for (final String sym : ImmutableSet.<String>builder().add(WILD, DRAGON, TOAD, RED_FISH, ORANGE, EIGHT, A, K, Q, J, T, N, BONUS).build()) {
                final int count = countSym.count(sym);
                total += count;
                System.out.println(sym + " count: " + count);
            }
            System.out.println("=== Total: " + total + " ===");
        }

        // final int[][][] reelsInt = transformReelsToIntList(MAIN_REELS);
    }

    private static int[][][] transformReelsToIntList(String[][][] reels) {
        final int[][][] reelsInt = new int[reels.length][][];
        for (int i = 0; i < reels.length; i++) {
            final String[][] reelsIdx = reels[i];
            final int[][] reelsIdxInt = new int[reelsIdx.length][];
            for (int k = 0; k < reelsIdx.length; k++) {
                final String[] reel = reelsIdx[k];
                final int[] reelInt = new int[reel.length];
                for (int p = 0; p < reel.length; p++) {
                    reelInt[p] = SYM_INDX.get(reel[p]);
                }
                reelsIdxInt[k] = reelInt;
            }
            reelsInt[i] = reelsIdxInt;
        }
        return reelsInt;
    }
}
